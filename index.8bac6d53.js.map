{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-a668c63e2ac529ee.js","src/index.js","src/js/modalStudents.js","src/js/filmSearch.js","src/js/filmCard.js","node_modules/@parcel/runtime-js/lib/runtime-94203b52a1ceda05.js","src/js/fetchGenres.js","src/js/backToTopBtn.js","src/js/switchDayNight.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.8bac6d53.js\\\",\\\"8iIgb\\\":\\\"photo.e4714d22.jpg\\\",\\\"7mVsD\\\":\\\"index.17d40aba.css\\\",\\\"4JSjo\\\":\\\"library.84f2772a.js\\\",\\\"3u2jX\\\":\\\"index.1b4ae7c0.js\\\"}\"));","import './js/fetchAPI';\nimport './js/refs';\nimport './js/modalMovie';\nimport './js/modalStudents';\nimport './js/pagination';\nimport './js/filmSearch';\nimport './js/filmCard';\nimport './js/api-vars';\nimport './js/fetchGenres';\nimport './js/localStorage';\nimport './js/backToTopBtn';\nimport './js/switchDayNight';\nimport './js/scrollToTop';\nimport './js/trailer';\n// import './js/watched';\n// import './js/library';\nimport './js/loader';\n","(() => {\n  const refs = {\n    openModalStudentBtn: document.querySelector('[data-modal-footer-open]'),\n    closeModalStudentBtn: document.querySelector('[data-modal-footer-close]'),\n    modalStudent: document.querySelector('[data-modal-footer]'),\n  };\n\n  refs.openModalStudentBtn.addEventListener('click', toggleModal);\n  refs.closeModalStudentBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modalStudent.classList.toggle('is-hidden');\n  }\n})();\n","import { API_KEY, BASE_URL, TREND_URL, SEARCH_URL } from './api-vars.js';\nimport { showTrendingMovies } from './filmCard';\nimport { renderTrendingMovies } from './filmCard';\nimport { makeTuiPagination } from './pagination.js';\nimport { refs } from './refs';\nimport { load, save, remove } from './localStorage';\nimport scrollToTop from './scrollToTop.js';\n//import {fetchTrendingMovies} from './fetchAPI'\n\nconst logo = document.querySelector('.header-logo__link');\nlogo.addEventListener('click', onClickLogo);\n\nrefs.form.addEventListener('submit', onFormSubmit);\nlet page = 1;\nlet query = '';\n\nexport default async function fetchMovie(query, page) {\n  try {\n    const response = await fetch(\n      `${SEARCH_URL}?api_key=${API_KEY}&page=${page}&include_adult=false&query=${query}`\n    );\n    const data = await response.json();\n    save('search-storage', data);\n    return data;\n  } catch (error) {\n    console.error();\n  }\n}\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  page = 1;\n  query = event.currentTarget.elements.searchQuery.value.trim();\n  // console.log(query);\n  refs.paginationEl.style.display = 'none';\n\n  if (query === '') {\n    invalidSearch('Search for movies is empty! Enter movie name, please', 2000);\n    refs.paginationEl.style.display = 'none';\n    return;\n  }\n  await fetchMovie(query, page)\n    .then(data => {\n      // console.log(data);\n      const totalRes = data.total_results;\n      // console.log(totalRes);\n      if (!totalRes) {\n        invalidSearch(\n          'Search result not successful. Enter the correct movie name and try again',\n          2000\n        );\n        //refs.paginationEl.style.display = 'none';\n      }\n\n      if (totalRes >= 1) {\n        renderTrendingMovies(data.results);\n        page += 1;\n        makeTuiPagination(totalRes, data.total_pages).on(\n          'afterMove',\n          ({ page }) => {\n            fetchMovie(query, page).then(data => {\n              renderTrendingMovies(data.results);\n              save('search-storage', data);\n              scrollToTop();\n            });\n          }\n        );\n      }\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      refs.form.reset();\n    });\n}\n\nexport function invalidSearch(message, showTime) {\n  refs.form.insertAdjacentHTML(\n    'beforeend',\n    '<p class=\"form__uncorrect-search is-hidden\"></p>'\n  );\n  const notification = document.querySelector('.form__uncorrect-search');\n  notification.textContent = `${message}`;\n  setTimeout(() => {\n    notification.classList.toggle('is-hidden');\n  }, showTime);\n\n  showTrendingMovies(page);\n\n  const removeNotification = setTimeout(() => {\n    refs.form.lastElementChild.remove();\n  }, 2000);\n}\n\nfunction onClickLogo() {\n  page = 1;\n  showTrendingMovies(page);\n}\n","import { fetchTrendingMovies } from './fetchAPI';\nimport { refs } from './refs';\nimport { makeTuiPagination } from './pagination';\nimport photo from '../images/header/photo.jpg';\nimport { save } from './localStorage';\nimport scrollToTop from './scrollToTop';\nimport { waitingLi } from './modalMovie';\n\nconst moviesGallery = document.querySelector('.cards__list');\n\nlet page = 1;\n\nexport async function showTrendingMovies(page = 1) {\n  try {\n    const data = await fetchTrendingMovies(page);\n    // console.log(data);\n    renderTrendingMovies(data.results);\n    save('search-storage', data);\n\n    makeTuiPagination(data.total_results, data.total_pages).on(\n      'afterMove',\n      ({ page }) => {\n        fetchTrendingMovies(page).then(data => {\n          renderTrendingMovies(data.results);\n          save('search-storage', data);\n          scrollToTop();\n        });\n      }\n    );\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nshowTrendingMovies()\n\nfunction getGenres(genresArr) {\n  return genresArr.map(genre => localStorage.getItem(genre)).join(', ');\n}\n\nexport function renderTrendingMovies(data) {\n  const urlImage = 'https://image.tmdb.org/t/p/w500/';\n  let genresName = '';\n  let releaseYear = '';\n  waitingLi();\n  const cardMarkup = data\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genres,\n        release_date = '',\n        vote_average = '',\n        id,\n      }) => {\n        if (genres.length > 3) {\n          genres.splice(3, genres.length - 3);\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        genresName = getGenres(genres);\n\n        if (genresName.length > 24) {\n          genres.pop();\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        if (genres.length === 0) {\n          genresName = 'genre is unknown';\n        }\n\n        releaseYear = release_date.slice(0, 4);\n        if (releaseYear === '') {\n          releaseYear = 'release date unknown';\n        }\n\n        if (!poster_path) {\n          return `<li  id=\"${id}\" class=\"movie__card\">\n        <img width=\"100%\"\n          src=\"${photo}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        } else {\n          return `<li id=\"${id}\" class=\"movie__card\">\n        <img\n          src=\"${urlImage}${poster_path}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        }\n      }\n    )\n    .join('');\n\n  refs.moviesGallery.innerHTML = cardMarkup;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8iIgb\")).toString();","import { API_KEY, BASE_URL } from './/api-vars.js';\n\nexport async function getGenres() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n    );\n    const respGenres = await response.json();\n\n    return respGenres;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function genresToLocalStorage(arr) {\n  arr.map(genre => {\n    localStorage.setItem(JSON.stringify(genre.id), genre.name);\n  });\n}\n\ngetGenres().then(res => {\n  genresToLocalStorage(res.genres);\n});\n","export const btnToTop = document.querySelector('#btn--to_top');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  window.addEventListener('scroll', function () {\n    if (this.scrollY > 100) {\n      btnToTop.classList.add('show');\n    } else {\n      btnToTop.classList.remove('show');\n    }\n  });\n});\n","import { refs } from './refs';\n\n\nwindow.addEventListener('load', windowLoad);\n\nexport function windowLoad() {\n  const toggler = document.querySelector('.toggler');\n  const themeBtn = document.querySelector('.theme-btn');\n  const htmlBlock = document.documentElement;\n  const saveUserTheme = localStorage.getItem('user-theme');\n \n  let userTheme;\n  if (window.matchMedia) {\n    userTheme = window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n  }\n  window\n    .matchMedia('(prefers-color-scheme: dark)')\n    .addEventListener('change', e => {\n      !saveUserTheme ? changeTheme() : null;\n    });\n\n  if (themeBtn) {\n    themeBtn.addEventListener('click', function (e) {\n      changeTheme(true);\n    });\n  }\n\n  function setThemeClass() {\n    if (saveUserTheme) {\n      htmlBlock.classList.add(saveUserTheme);\n    } else {\n      htmlBlock.classList.add(userTheme);\n    }\n  }\n  setThemeClass();\n\n  function changeTheme(saveTheme = false) {\n    let currentTheme = htmlBlock.classList.contains('light') ? 'light' : 'dark';\n    let newTheme;\n    if (currentTheme === 'light') {\n      newTheme = 'dark';\n    } else if (currentTheme === 'dark') {\n      newTheme = 'light';\n    }\n    htmlBlock.classList.remove(currentTheme);\n    htmlBlock.classList.add(newTheme);\n    saveTheme ? localStorage.setItem('user-theme', newTheme) : null;\n  }\n}\n"],"names":["parcelRequire","register","JSON","parse","refs","openModalStudentBtn","document","querySelector","closeModalStudentBtn","modalStudent","toggleModal","classList","toggle","addEventListener","$6RiD3","$cqGDw","$d729b21930bfad69$exports","URL","resolve","import","meta","url","toString","async","$0a7486ddd54a8b87$export$2e39d0d53b532317","page1","data1","fetchTrendingMovies","$0a7486ddd54a8b87$export$ae4a60d31ab53252","results","$31u3U","save","$2nhTy","makeTuiPagination","total_results","total_pages","on","page","page2","then","data","$h0oKa","default","err","console","error","message","$0a7486ddd54a8b87$var$getGenres","genresArr","map","genre","localStorage","getItem","join","genresName","releaseYear","$bnGUG","waitingLi","cardMarkup","poster_path","title","genre_ids","genres","release_date","vote_average","id","length","splice","pop","slice","toFixed","$parcel$interopDefault","$krGWQ","moviesGallery","innerHTML","$79801107a2301e92$var$page","form","event","preventDefault","$79801107a2301e92$var$query","currentTarget","elements","searchQuery","value","trim","paginationEl","style","display","$79801107a2301e92$export$3e457af76575b558","$79801107a2301e92$export$2e2bcd8739ae039","totalRes","catch","log","finally","reset","query1","response","fetch","SEARCH_URL","API_KEY","json","showTime","insertAdjacentHTML","notification","textContent","setTimeout","lastElementChild","remove","BASE_URL","$5844b68ee09a1fe1$export$c5604fa8028da00","res","setItem","stringify","name","$b3f9deaa9d62386c$export$f1553a5662cd6555","window","this","scrollY","add","themeBtn","htmlBlock","documentElement","saveUserTheme","userTheme","matchMedia","matches","e","changeTheme","saveTheme","newTheme","currentTheme","contains"],"version":3,"file":"index.8bac6d53.js.map"}