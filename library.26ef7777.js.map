{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,mCAEA,MAAMC,EAAaC,SAASC,cAAc,qBACpCC,EAAWF,SAASC,cAAc,mBAExCF,EAAWI,iBAAiB,SAG5B,WACEJ,EAAWK,UAAUC,IAAI,aACzBH,EAASE,UAAUE,OAAO,Y,IAJ5BJ,EAASC,iBAAiB,SAM1B,WACED,EAASE,UAAUC,IAAI,aACvBN,EAAWK,UAAUE,OAAO,Y,IA8CZN,SAASC,cAAc,kBACzBD,SAASC,cAAc,qBADvC,MAEMM,EAAmBP,SAASC,cAAc,wBAChDO,QAAQC,IAAIF,GAEZ,MAEMG,EAAkBC,KAAKC,MAC3BC,aAAaC,QAHmB,mBAM5BC,EAAgBJ,KAAKC,MAAMC,aAAaC,QALd,iBAM1BE,EAAcN,EAAgBO,OAAOF,GAEjBC,EAAYE,QACpC,CAACC,EAAMC,EAAOC,IAAUA,EAAMC,QAAQH,KAAUC,IAkDlD,SAASG,EAAUC,GACjB,OAAOA,EAAUC,KAAIC,GAASb,aAAaC,QAAQY,KAAQC,KAAK,K,CAGlE,SAASC,EAAwBT,GAE/B,IAAIU,EAAa,GACbC,EAAc,IAClB,EAAAjC,EAAAkC,aACA,MAAMC,EAAoBb,EACvBM,KACC,EAACQ,YACCA,EAAWC,MACXA,EACAC,UAAWC,EAAMC,aACjBA,EAAe,GAAEC,aACjBA,EAAe,GAAEC,GACjBA,MAEIH,EAAOI,OAAS,IAClBJ,EAAOK,OAAO,EAAGL,EAAOI,OAAS,GAEjCX,EAAaN,EAAUa,GACvBP,GAA0B,WAG5BA,EAAaN,EAAUa,GAEnBP,EAAWW,OAAS,KACtBJ,EAAOM,MAEPb,EAAaN,EAAUa,GACvBP,GAA0B,WAGN,IAAlBO,EAAOI,SACTX,EAAa,oBAGfC,EAAcO,EAAaM,MAAM,EAAG,GAChB,KAAhBb,IACFA,EAAc,wBAGXG,EAgBI,WAAWM,yFAEAN,uHAIOC,oFAEKL,6CACJC,iDACIQ,EAAaM,QAAQ,sDAzB5C,YAAYL,sEAEZM,2HAIkBX,oFAEKL,6CACJC,iDACIQ,EAAaM,QAAQ,yDAsBxDjB,KAAK,IACRnB,QAAQC,IAAIuB,GACZzB,EAAiBuC,UAAYd,C,CA/H/BxB,QAAQC,IAAIO,GAGZjB,EAAWI,iBAAiB,SAS5B,WACiC,IAA3BO,EAAgB8B,SAClB,EAAAO,EAAAC,gBAEF,GAAIhC,EAAYwB,OAAS,EAAG,CAC1B,MAAMS,EAAkBtC,KAAKC,MAC3BC,aAAaC,QA9Be,mBAgC9BN,QAAQC,IAAIwC,GACZ1C,EAAiBuC,UAAY,GAE7B,IACElB,EAAwBqB,E,CACxB,MAAOC,GACP1C,QAAQC,IAAIyC,EAAMC,Q,MAtBxBjD,EAASC,iBAAiB,SA2B1B,WAC+B,IAAzBY,EAAcyB,SAChB,EAAAO,EAAAC,gBAEF,GAAIhC,EAAa,CACf,MAAMoC,EAAgBzC,KAAKC,MACzBC,aAAaC,QAhDa,iBAkD5BP,EAAiBuC,UAAY,GAC7B,IACElB,EAAwBwB,E,CACxB,MAAOF,GACP1C,QAAQC,IAAIyC,EAAMC,Q","sources":["src/js/watched.js"],"sourcesContent":["import { waitingLi } from './modalMovie';\nimport { emptyLibrary } from './library';\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\n\nwatchedBtn.addEventListener('click', onWatched);\nqueueBtn.addEventListener('click', onQueueBtn);\n\nfunction onWatched() {\n  watchedBtn.classList.add('js-active');\n  queueBtn.classList.remove('js-active');\n}\nfunction onQueueBtn() {\n  queueBtn.classList.add('js-active');\n  watchedBtn.classList.remove('js-active');\n}\n\n// // создание\n\nimport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL } from './api-vars.js';\n\nfunction createLibraryMarkup({\n  genres,\n  poster_path,\n  title,\n  release_date,\n  id,\n  vote_average,\n}) {\n  let genresArr = [];\n  genres.map(genre => genresArr.push(genre.name));\n  if (genresArr.length > 3) {\n    const changedArr = genresArr.slice(0, 2);\n    changedArr.push('Other');\n    genresArr = changedArr;\n  }\n  const genresStr = genresArr.join(', ');\n  const year = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  return `<li class=\"grid__item film-card \">\n        <a href=\"#\" data-id=\"${id}\" class=\"list\">\n          <div class=\"film-card__thumb\">\n            <img\n              class=\"film-card__img\"\n              src=\"${API_KEY}${poster_path}\"\n              alt=\"Movie poster\"\n              loading=\"lazy\"\n              id=${id}\n            />\n          </div>\n          <h2 class=\"film-card__header\">${title}</h2>\n        </a>\n        <p class=\"film-card__genres\">${genresStr}</p>\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__rating\">${rating}</span>\n      </li>`;\n}\n\n// рендер\n//const emptyLibrary = document.querySelector('.empty-library');\nconst container = document.querySelector('.empty-library');\nconst listLib = document.querySelector('.film-list-lib-js');\nconst listCardsLibrary = document.querySelector('.card__list--library');\nconsole.log(listCardsLibrary);\n\nconst LOCAL_STORAGE_KEY_WATCHED = 'watched-movies';\nconst LOCAL_STORAGE_KEY_QUEUE = 'queue-movies';\nconst saveDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n);\n\nconst saveDataQueue = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE));\nconst saveDataAll = saveDataWatched.concat(saveDataQueue);\n\nconst savedDataAllQniue = saveDataAll.filter(\n  (data, index, array) => array.indexOf(data) === index\n);\nconsole.log(saveDataAll);\n// init();\n\nwatchedBtn.addEventListener('click', onWatchedClick);\nqueueBtn.addEventListener('click', onQueueClick);\n\n// if (!savedDataAllQniue.length) {\n//   emptyLibrary.classList.remove('is-hidden');\n// }\n\nimport { renderTrendingMovies } from './filmCard';\n\nfunction onWatchedClick() {\n  if (saveDataWatched.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll.length > 0) {\n    const saveDataWatched = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n    );\n    console.log(saveDataWatched);\n    listCardsLibrary.innerHTML = '';\n\n    try {\n      renderMoviesFromLibrary(saveDataWatched);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction onQueueClick() {\n  if (saveDataQueue.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll) {\n    const saveDataQueue = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE)\n    );\n    listCardsLibrary.innerHTML = '';\n    try {\n      renderMoviesFromLibrary(saveDataQueue);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction getGenres(genresArr) {\n  return genresArr.map(genre => localStorage.getItem(genre)).join(', ');\n}\n\nfunction renderMoviesFromLibrary(data) {\n  const urlImage = 'https://image.tmdb.org/t/p/w500/';\n  let genresName = '';\n  let releaseYear = '';\n  waitingLi();\n  const cardMarkupLibrary = data\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genres,\n        release_date = '',\n        vote_average = '',\n        id,\n      }) => {\n        if (genres.length > 3) {\n          genres.splice(3, genres.length - 3);\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        genresName = getGenres(genres);\n\n        if (genresName.length > 24) {\n          genres.pop();\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        if (genres.length === 0) {\n          genresName = 'genre is unknown';\n        }\n\n        releaseYear = release_date.slice(0, 4);\n        if (releaseYear === '') {\n          releaseYear = 'release date unknown';\n        }\n\n        if (!poster_path) {\n          return `<li  id=\"${id}\" class=\"movie__card\">\n        <img width=\"100%\"\n          src=\"${photo}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        } else {\n          return `<li id=\"${id}\" class=\"movie__card\">\n        <img\n          src=\"${urlImage}${poster_path}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        }\n      }\n    )\n    .join('');\n  console.log(cardMarkupLibrary);\n  listCardsLibrary.innerHTML = cardMarkupLibrary;\n}\n"],"names":["$bnGUG","parcelRequire","$7126a8cfa5cf9b17$var$watchedBtn","document","querySelector","$7126a8cfa5cf9b17$var$queueBtn","addEventListener","classList","add","remove","$7126a8cfa5cf9b17$var$listCardsLibrary","console","log","$7126a8cfa5cf9b17$var$saveDataWatched","JSON","parse","localStorage","getItem","$7126a8cfa5cf9b17$var$saveDataQueue","$7126a8cfa5cf9b17$var$saveDataAll","concat","filter","data","index","array","indexOf","$7126a8cfa5cf9b17$var$getGenres","genresArr","map","genre","join","$7126a8cfa5cf9b17$var$renderMoviesFromLibrary","genresName","releaseYear","waitingLi","cardMarkupLibrary","poster_path","title","genre_ids","genres","release_date","vote_average","id","length","splice","pop","slice","toFixed","photo","innerHTML","$2sH7u","emptyLibrary","saveDataWatched1","error","message","saveDataQueue1"],"version":3,"file":"library.26ef7777.js.map"}