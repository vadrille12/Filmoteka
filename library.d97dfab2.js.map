{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-22333b1fe5648534.js","node_modules/@parcel/runtime-js/lib/runtime-94203b52a1ceda05.js","src/js/watched.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2B25S\\\":\\\"library.d97dfab2.js\\\",\\\"8iIgb\\\":\\\"photo.e4714d22.jpg\\\",\\\"7mVsD\\\":\\\"index.20e08295.css\\\",\\\"3u2jX\\\":\\\"index.383de404.js\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8iIgb\")).toString();","import photo from '../images/header/photo.jpg';\nimport { waitingLi } from './modalMovie';\nimport { emptyLibrary } from './library';\nimport { refs } from './refs';\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nrefs.addWatchedBtn.addEventListener('click', removeMovieFromWatched);\nrefs.addQueueBtn.addEventListener('click', removeMovieFromQueue);\nwatchedBtn.addEventListener('click', onWatchedClick);\nqueueBtn.addEventListener('click', onQueueClick);\n\nwatchedBtn.addEventListener('click', onWatched);\nqueueBtn.addEventListener('click', onQueueBtn);\n\nfunction onWatched() {\n  watchedBtn.classList.add('js-active');\n  queueBtn.classList.remove('js-active');\n}\n\nfunction onQueueBtn() {\n  queueBtn.classList.add('js-active');\n  watchedBtn.classList.remove('js-active');\n}\n\nimport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL } from './api-vars.js';\n\nfunction createLibraryMarkup({\n  genres,\n  poster_path,\n  title,\n  release_date,\n  id,\n  vote_average,\n}) {\n  let genresArr = [];\n  genres.map(genre => genresArr.push(genre.name));\n  if (genresArr.length > 3) {\n    const changedArr = genresArr.slice(0, 2);\n    changedArr.push('Other');\n    genresArr = changedArr;\n  }\n  const genresStr = genresArr.join(', ');\n  const year = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  return `<li class=\"grid__item film-card \">\n        <a href=\"#\" data-id=\"${id}\" class=\"list\">\n          <div class=\"film-card__thumb\">\n            <img\n              class=\"film-card__img\"\n              src=\"${API_KEY}${poster_path}\"\n              alt=\"Movie poster\"\n              loading=\"lazy\"\n              id=${id}\n            />\n          </div>\n          <h2 class=\"film-card__header\">${title}</h2>\n        </a>\n        <p class=\"film-card__genres\">${genresStr}</p>\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__rating\">${rating}</span>\n      </li>`;\n}\n\n// рендер\n//const emptyLibrary = document.querySelector('.empty-library');\nconst container = document.querySelector('.empty-library');\nconst listLib = document.querySelector('.film-list-lib-js');\nconst listCardsLibrary = document.querySelector('.card__list--library');\nconst libraryBtn = document.querySelector('.library-default');\n// console.log(listCardsLibrary);\n\nconst LOCAL_STORAGE_KEY_WATCHED = 'watched-movies';\nconst LOCAL_STORAGE_KEY_QUEUE = 'queue-movies';\nconst saveDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n);\n\nconst saveDataQueue = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE));\nconst saveDataAll = saveDataWatched.concat(saveDataQueue);\n\nconst savedDataAllQniue = saveDataAll.filter(\n  (data, index, array) => array.indexOf(data) === index\n);\n\nrenderMoviesFromLibrary(saveDataWatched);\nif (saveDataWatched.length === 0) {\n  emptyLibrary();\n}\n\nfunction removeObjectWithId(arr, id) {\n  const objWithIdIndex = arr.findIndex(obj => obj.id === id);\n\n  if (objWithIdIndex > -1) {\n    arr.splice(objWithIdIndex, 1);\n  }\n\n  return arr;\n}\n\nfunction removeMovieFromWatched(e) {\n  const forDeleteId = Number(e.target.dataset.id);\n  const idforRemovingFilm = saveDataWatched.find(film => {\n    if (forDeleteId === film.id) {\n      console.log(film.id);\n      return film.id;\n    }\n  });\n\n  removeObjectWithId(saveDataWatched, idforRemovingFilm.id);\n  renderMoviesFromLibrary(saveDataWatched);\n  if (saveDataWatched.length === 0) {\n    emptyLibrary();\n  }\n\n  // emptyLibrary();\n}\n\nfunction removeMovieFromQueue(e) {\n  const forDeleteId = Number(e.target.dataset.id);\n  const idforRemovingFilm = saveDataQueue.find(film => {\n    if (forDeleteId === film.id) {\n      console.log(film.id);\n      return film.id;\n    }\n  });\n\n  removeObjectWithId(saveDataQueue, idforRemovingFilm.id);\n  renderMoviesFromLibrary(saveDataQueue);\n  if (saveDataQueue.length === 0) {\n    emptyLibrary();\n  }\n}\n\nimport { renderTrendingMovies } from './filmCard';\n\nexport function onWatchedClick() {\n  container.innerHTML = '';\n  if (saveDataWatched.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll.length > 0) {\n    const saveDataWatched = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n    );\n    console.log(saveDataWatched);\n    listCardsLibrary.innerHTML = '';\n\n    try {\n      renderMoviesFromLibrary(saveDataWatched);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction onQueueClick() {\n  container.innerHTML = '';\n  if (saveDataQueue.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll) {\n    const saveDataQueue = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE)\n    );\n    listCardsLibrary.innerHTML = '';\n    try {\n      renderMoviesFromLibrary(saveDataQueue);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction getGenres(genresArr) {\n  return genresArr.map(genre => localStorage.getItem(genre)).join(', ');\n}\n\nfunction renderMoviesFromLibrary(data) {\n  const urlImage = 'https://image.tmdb.org/t/p/w500/';\n  let genresName = '';\n  let releaseYear = '';\n  waitingLi();\n  const cardMarkupLibrary = data\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genres,\n        release_date = '',\n        vote_average = '',\n        id,\n      }) => {\n        if (genres.length > 3) {\n          genres.splice(3, genres.length - 3);\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        genresName = getGenres(genres);\n\n        if (genresName.length > 24) {\n          genres.pop();\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        if (genres.length === 0) {\n          genresName = 'genre is unknown';\n        }\n\n        releaseYear = release_date.slice(0, 4);\n        if (releaseYear === '') {\n          releaseYear = 'release date unknown';\n        }\n\n        if (!poster_path) {\n          return `<li  id=\"${id}\" class=\"movie__card\">\n        <img width=\"100%\"\n          src=\"${photo}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        } else {\n          return `<li id=\"${id}\" class=\"movie__card\">\n        <img\n          src=\"${urlImage}${poster_path}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        }\n      }\n    )\n    .join('');\n  listCardsLibrary.innerHTML = cardMarkupLibrary;\n}\n"],"names":["parcelRequire","register","JSON","parse","$d729b21930bfad69$exports","URL","resolve","import","meta","url","toString","$7126a8cfa5cf9b17$var$watchedBtn","document","querySelector","$7126a8cfa5cf9b17$var$queueBtn","$krGWQ","refs","addWatchedBtn","addEventListener","e","forDeleteId","Number","target","dataset","id","idforRemovingFilm","$7126a8cfa5cf9b17$var$saveDataWatched","find","film","console","log","$7126a8cfa5cf9b17$var$removeObjectWithId","$7126a8cfa5cf9b17$var$renderMoviesFromLibrary","length","$2sH7u","emptyLibrary","addQueueBtn","$7126a8cfa5cf9b17$var$saveDataQueue","$7126a8cfa5cf9b17$var$container","innerHTML","$7126a8cfa5cf9b17$var$saveDataAll","saveDataWatched1","localStorage","getItem","$7126a8cfa5cf9b17$var$listCardsLibrary","error","message","saveDataQueue1","classList","add","remove","concat","filter","data","index","array","indexOf","arr","objWithIdIndex","findIndex","obj","splice","$7126a8cfa5cf9b17$var$getGenres","genresArr","map","genre","join","genresName","releaseYear","$bnGUG","waitingLi","cardMarkupLibrary","poster_path","title","genre_ids","genres","release_date","vote_average","pop","slice","toFixed","$parcel$interopDefault"],"version":3,"file":"library.d97dfab2.js.map"}