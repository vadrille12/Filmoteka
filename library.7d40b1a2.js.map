{"mappings":"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","sources":["src/js/watched.js"],"sourcesContent":["import { waitingLi } from './modalMovie';\nimport { emptyLibrary } from './library';\nimport { refs } from './refs';\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nrefs.addWatchedBtn.addEventListener('click', removeMovieFromWatched);\nrefs.addQueueBtn.addEventListener('click', removeMovieFromQueue);\nwatchedBtn.addEventListener('click', onWatchedClick);\nqueueBtn.addEventListener('click', onQueueClick);\n\nwatchedBtn.addEventListener('click', onWatched);\nqueueBtn.addEventListener('click', onQueueBtn);\n\n\nfunction onWatched() {\n  watchedBtn.classList.add('js-active');\n  queueBtn.classList.remove('js-active');\n}\n\nfunction onQueueBtn() {\n  queueBtn.classList.add('js-active');\n  watchedBtn.classList.remove('js-active');\n}\n\nimport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL } from './api-vars.js';\n\nfunction createLibraryMarkup({\n  genres,\n  poster_path,\n  title,\n  release_date,\n  id,\n  vote_average,\n}) {\n  let genresArr = [];\n  genres.map(genre => genresArr.push(genre.name));\n  if (genresArr.length > 3) {\n    const changedArr = genresArr.slice(0, 2);\n    changedArr.push('Other');\n    genresArr = changedArr;\n  }\n  const genresStr = genresArr.join(', ');\n  const year = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  return `<li class=\"grid__item film-card \">\n        <a href=\"#\" data-id=\"${id}\" class=\"list\">\n          <div class=\"film-card__thumb\">\n            <img\n              class=\"film-card__img\"\n              src=\"${API_KEY}${poster_path}\"\n              alt=\"Movie poster\"\n              loading=\"lazy\"\n              id=${id}\n            />\n          </div>\n          <h2 class=\"film-card__header\">${title}</h2>\n        </a>\n        <p class=\"film-card__genres\">${genresStr}</p>\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__rating\">${rating}</span>\n      </li>`;\n}\n\n// рендер\n//const emptyLibrary = document.querySelector('.empty-library');\nconst container = document.querySelector('.empty-library');\nconst listLib = document.querySelector('.film-list-lib-js');\nconst listCardsLibrary = document.querySelector('.card__list--library');\nconst libraryBtn = document.querySelector('.library-default');\n// console.log(listCardsLibrary);\n\nconst LOCAL_STORAGE_KEY_WATCHED = 'watched-movies';\nconst LOCAL_STORAGE_KEY_QUEUE = 'queue-movies';\nconst saveDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n);\n\nconst saveDataQueue = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE));\nconst saveDataAll = saveDataWatched.concat(saveDataQueue);\n\nconst savedDataAllQniue = saveDataAll.filter(\n  (data, index, array) => array.indexOf(data) === index\n);\n\nrenderMoviesFromLibrary(saveDataWatched);\n\nfunction removeObjectWithId(arr, id) {\n  const objWithIdIndex = arr.findIndex(obj => obj.id === id);\n\n  if (objWithIdIndex > -1) {\n    arr.splice(objWithIdIndex, 1);\n  }\n\n  return arr;\n}\n\nfunction removeMovieFromWatched(e) {\n  const forDeleteId = Number(e.target.dataset.id);\n  const idforRemovingFilm = saveDataWatched.find(film => {\n    if (forDeleteId === film.id) {\n      console.log(film.id);\n      return film.id;\n    }\n  });\n\n  removeObjectWithId(saveDataWatched, idforRemovingFilm.id);\n  renderMoviesFromLibrary(saveDataWatched);\n}\n\nfunction removeMovieFromQueue(e) {\n  const forDeleteId = Number(e.target.dataset.id);\n  const idforRemovingFilm = saveDataQueue.find(film => {\n    if (forDeleteId === film.id) {\n      console.log(film.id);\n      return film.id;\n    }\n  });\n\n  removeObjectWithId(saveDataQueue, idforRemovingFilm.id);\n  renderMoviesFromLibrary(saveDataQueue);\n}\n\nimport { renderTrendingMovies } from './filmCard';\n\nexport function onWatchedClick() {\n  container.innerHTML = '';\n  if (saveDataWatched.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll.length > 0) {\n    const saveDataWatched = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n    );\n    console.log(saveDataWatched);\n    listCardsLibrary.innerHTML = '';\n\n    try {\n      renderMoviesFromLibrary(saveDataWatched);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction onQueueClick() {\n  container.innerHTML ='';\n  if (saveDataQueue.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll) {\n    const saveDataQueue = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE)\n    );\n    listCardsLibrary.innerHTML = '';\n    try {\n      renderMoviesFromLibrary(saveDataQueue);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction getGenres(genresArr) {\n  return genresArr.map(genre => localStorage.getItem(genre)).join(', ');\n}\n\nfunction renderMoviesFromLibrary(data) {\n  const urlImage = 'https://image.tmdb.org/t/p/w500/';\n  let genresName = '';\n  let releaseYear = '';\n  waitingLi();\n  const cardMarkupLibrary = data\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genres,\n        release_date = '',\n        vote_average = '',\n        id,\n      }) => {\n        if (genres.length > 3) {\n          genres.splice(3, genres.length - 3);\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        genresName = getGenres(genres);\n\n        if (genresName.length > 24) {\n          genres.pop();\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        if (genres.length === 0) {\n          genresName = 'genre is unknown';\n        }\n\n        releaseYear = release_date.slice(0, 4);\n        if (releaseYear === '') {\n          releaseYear = 'release date unknown';\n        }\n\n        if (!poster_path) {\n          return `<li  id=\"${id}\" class=\"movie__card\">\n        <img width=\"100%\"\n          src=\"${photo}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        } else {\n          return `<li id=\"${id}\" class=\"movie__card\">\n        <img\n          src=\"${urlImage}${poster_path}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        }\n      }\n    )\n    .join('');\n  listCardsLibrary.innerHTML = cardMarkupLibrary;\n}\n"],"names":["$bnGUG","parcelRequire","$7126a8cfa5cf9b17$var$watchedBtn","document","querySelector","$7126a8cfa5cf9b17$var$queueBtn","$krGWQ","refs","addWatchedBtn","addEventListener","e","forDeleteId","Number","target","dataset","id","idforRemovingFilm","$7126a8cfa5cf9b17$var$saveDataWatched","find","film","console","log","$7126a8cfa5cf9b17$var$removeObjectWithId","$7126a8cfa5cf9b17$var$renderMoviesFromLibrary","addQueueBtn","$7126a8cfa5cf9b17$var$saveDataQueue","$7126a8cfa5cf9b17$var$container","innerHTML","length","$2sH7u","emptyLibrary","$7126a8cfa5cf9b17$var$saveDataAll","saveDataWatched1","JSON","parse","localStorage","getItem","$7126a8cfa5cf9b17$var$listCardsLibrary","error","message","saveDataQueue1","classList","add","remove","concat","filter","data","index","array","indexOf","arr","objWithIdIndex","findIndex","obj","splice","$7126a8cfa5cf9b17$var$getGenres","genresArr","map","genre","join","genresName","releaseYear","waitingLi","cardMarkupLibrary","poster_path","title","genre_ids","genres","release_date","vote_average","pop","slice","toFixed","photo"],"version":3,"file":"library.7d40b1a2.js.map"}