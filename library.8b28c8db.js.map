{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,mCAEA,IAAMC,EAAaC,SAASC,cAAc,qBACpCC,EAAWF,SAASC,cAAc,mBA0DtBD,SAASC,cAAc,kBACzBD,SAASC,cAAc,qBADvC,IAEME,EAAmBH,SAASC,cAAc,wBAC1CG,EAAaJ,SAASC,cAAc,oBAGpCI,EAA4B,iBAC5BC,EAA0B,eAC1BC,EAAkBC,KAAKC,MAC3BC,aAAaC,QAAQN,IAGjBO,EAAgBJ,KAAKC,MAAMC,aAAaC,QAAQL,IAChDO,EAAcN,EAAgBO,OAAOF,GAEjBC,EAAYE,QACpC,SAACC,EAAMC,EAAOC,G,OAAUA,EAAMC,QAAQH,KAAUC,C,IAelD,SAASG,IAMP,GAJ+B,IAA3Bb,EAAgBc,SAClB,EAAAC,EAAAC,gBAGEV,EAAYQ,OAAS,EAAG,CAC1B,IAAMG,EAAkBhB,KAAKC,MAC3BC,aAAaC,QAAQN,IAEvBoB,QAAQC,IAAIF,GACZrB,EAAiBwB,UAAY,GAE7B,IACEC,EAAwBJ,E,CACxB,MAAOK,GACPJ,QAAQC,IAAIG,EAAMC,Q,GAsBxB,SAASC,EAAUC,GACjB,OAAOA,EAAUC,KAAI,SAAAC,G,OAASxB,aAAaC,QAAQuB,E,IAAQC,KAAK,K,CAGlE,SAASP,EAAwBZ,GAC/B,IACIoB,EAAa,GACbC,EAAc,IAClB,EAAAxC,EAAAyC,aACA,IAAMC,EAAoBvB,EACvBiB,KACC,SAAAO,G,IACEC,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAiBH,EAAjBI,UAAiBC,EAAAL,EACjBM,oBAAY,IAAAD,EAAG,GAAEA,EAAAE,EAAAP,EACjBQ,oBAAY,IAAAD,EAAG,GAAEA,EACjBE,EAAET,EAAFS,GA2BA,OAzBIN,EAAOtB,OAAS,IAClBsB,EAAOO,OAAO,EAAGP,EAAOtB,OAAS,GAEjCe,EAAaL,EAAUY,GACvBP,GAA0B,YAG5BA,EAAaL,EAAUY,IAERtB,OAAS,KACtBsB,EAAOQ,MAEPf,EAAaL,EAAUY,GACvBP,GAA0B,WAGN,IAAlBO,EAAOtB,SACTe,EAAa,oBAIK,MADpBC,EAAcS,EAAaM,MAAM,EAAG,MAElCf,EAAc,wBAGXI,EAgBI,WAEA3B,OAFWmC,EAAG,yDAEHnC,OAzDT,oCA6DgBA,OAJP2B,EAAY,uHAMA3B,OAFL4B,EAAM,oFAGL5B,OADIsB,EAAW,6CAEXtB,OADJuB,EAAY,iDACgBvB,OAAxBkC,EAAaK,QAAQ,GAAG,qDAzB/C,YAEAvC,OAFYmC,EAAG,sEAMGnC,OAJlBwC,MAAM,uHAMiBxC,OAFL4B,EAAM,oFAGL5B,OADIsB,EAAW,6CAEXtB,OADJuB,EAAY,iDACgBvB,OAAxBkC,EAAaK,QAAQ,GAAG,oD,IAsB3DlB,KAAK,IACRV,QAAQC,IAAIa,GACZpC,EAAiBwB,UAAYY,C,CAlI/Bd,QAAQC,IAAIb,GAGZd,EAAWwD,iBAAiB,QAASnC,GACrClB,EAASqD,iBAAiB,SA8B1B,WAC+B,IAAzB3C,EAAcS,SAChB,EAAAC,EAAAC,gBAEF,GAAIV,EAAa,CACf,IAAM2C,EAAgBhD,KAAKC,MACzBC,aAAaC,QAAQL,IAEvBH,EAAiBwB,UAAY,GAC7B,IACEC,EAAwB4B,E,CACxB,MAAO3B,GACPJ,QAAQC,IAAIG,EAAMC,Q,MAzCxB1B,EAAWmD,iBAAiB,QAASnC,GACrCqC,OAAOC,OAAStC,G","sources":["src/js/watched.js"],"sourcesContent":["import { waitingLi } from './modalMovie';\nimport { emptyLibrary } from './library';\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\n\n// watchedBtn.addEventListener('click', onWatched);\n// queueBtn.addEventListener('click', onQueueBtn);\n\n// function onWatched() {\n//   watchedBtn.classList.add('js-active');\n//   queueBtn.classList.remove('js-active');\n// }\n// function onQueueBtn() {\n//   queueBtn.classList.add('js-active');\n//   watchedBtn.classList.remove('js-active');\n\n// }\n\n// // создание\n\nimport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL } from './api-vars.js';\n\nfunction createLibraryMarkup({\n  genres,\n  poster_path,\n  title,\n  release_date,\n  id,\n  vote_average,\n}) {\n  let genresArr = [];\n  genres.map(genre => genresArr.push(genre.name));\n  if (genresArr.length > 3) {\n    const changedArr = genresArr.slice(0, 2);\n    changedArr.push('Other');\n    genresArr = changedArr;\n  }\n  const genresStr = genresArr.join(', ');\n  const year = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  return `<li class=\"grid__item film-card \">\n        <a href=\"#\" data-id=\"${id}\" class=\"list\">\n          <div class=\"film-card__thumb\">\n            <img\n              class=\"film-card__img\"\n              src=\"${API_KEY}${poster_path}\"\n              alt=\"Movie poster\"\n              loading=\"lazy\"\n              id=${id}\n            />\n          </div>\n          <h2 class=\"film-card__header\">${title}</h2>\n        </a>\n        <p class=\"film-card__genres\">${genresStr}</p>\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__rating\">${rating}</span>\n      </li>`;\n}\n\n// рендер\n//const emptyLibrary = document.querySelector('.empty-library');\nconst container = document.querySelector('.empty-library');\nconst listLib = document.querySelector('.film-list-lib-js');\nconst listCardsLibrary = document.querySelector('.card__list--library');\nconst libraryBtn = document.querySelector('.library-default');\n// console.log(listCardsLibrary);\n\nconst LOCAL_STORAGE_KEY_WATCHED = 'watched-movies';\nconst LOCAL_STORAGE_KEY_QUEUE = 'queue-movies';\nconst saveDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n);\n\nconst saveDataQueue = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE));\nconst saveDataAll = saveDataWatched.concat(saveDataQueue);\n\nconst savedDataAllQniue = saveDataAll.filter(\n  (data, index, array) => array.indexOf(data) === index\n);\nconsole.log(saveDataAll);\n// init();\n\nwatchedBtn.addEventListener('click', onWatchedClick);\nqueueBtn.addEventListener('click', onQueueClick);\nlibraryBtn.addEventListener('click', onWatchedClick);\nwindow.onload = onWatchedClick() \n// if (!savedDataAllQniue.length) {\n//   emptyLibrary.classList.remove('is-hidden');\n// }\n\nimport { renderTrendingMovies } from './filmCard';\n\nfunction onWatchedClick() {\n \n  if (saveDataWatched.length === 0) {\n    emptyLibrary();\n    \n  }\n  if (saveDataAll.length > 0) {\n    const saveDataWatched = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_WATCHED)\n    );\n    console.log(saveDataWatched);\n    listCardsLibrary.innerHTML = '';\n\n    try {\n      renderMoviesFromLibrary(saveDataWatched);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction onQueueClick() {\n  if (saveDataQueue.length === 0) {\n    emptyLibrary();\n  }\n  if (saveDataAll) {\n    const saveDataQueue = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_QUEUE)\n    );\n    listCardsLibrary.innerHTML = '';\n    try {\n      renderMoviesFromLibrary(saveDataQueue);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction getGenres(genresArr) {\n  return genresArr.map(genre => localStorage.getItem(genre)).join(', ');\n}\n\nfunction renderMoviesFromLibrary(data) {\n  const urlImage = 'https://image.tmdb.org/t/p/w500/';\n  let genresName = '';\n  let releaseYear = '';\n  waitingLi();\n  const cardMarkupLibrary = data\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genres,\n        release_date = '',\n        vote_average = '',\n        id,\n      }) => {\n        if (genres.length > 3) {\n          genres.splice(3, genres.length - 3);\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        genresName = getGenres(genres);\n\n        if (genresName.length > 24) {\n          genres.pop();\n\n          genresName = getGenres(genres);\n          genresName = genresName + ', other';\n        }\n\n        if (genres.length === 0) {\n          genresName = 'genre is unknown';\n        }\n\n        releaseYear = release_date.slice(0, 4);\n        if (releaseYear === '') {\n          releaseYear = 'release date unknown';\n        }\n\n        if (!poster_path) {\n          return `<li  id=\"${id}\" class=\"movie__card\">\n        <img width=\"100%\"\n          src=\"${photo}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        } else {\n          return `<li id=\"${id}\" class=\"movie__card\">\n        <img\n          src=\"${urlImage}${poster_path}\"\n          class=\"movie__cover\"\n        />\n        <div class=\"movie__info\">\n        <h2 class=\"movie__title\">${title}</h2>\n        <div class=\"movie__item\">\n          <h3 class=\"movie__category\">${genresName}</h3>\n          <h3 class=\"movie__year\">${releaseYear}</h3>\n          <div class=\"movie__average\">${vote_average.toFixed(1)}</div>\n        </div>\n      </div>\n      </li>`;\n        }\n      }\n    )\n    .join('');\n  console.log(cardMarkupLibrary);\n  listCardsLibrary.innerHTML = cardMarkupLibrary;\n}\n"],"names":["$8AEpj","parcelRequire","$a215baf1061f969f$var$watchedBtn","document","querySelector","$a215baf1061f969f$var$queueBtn","$a215baf1061f969f$var$listCardsLibrary","$a215baf1061f969f$var$libraryBtn","$a215baf1061f969f$var$LOCAL_STORAGE_KEY_WATCHED","$a215baf1061f969f$var$LOCAL_STORAGE_KEY_QUEUE","$a215baf1061f969f$var$saveDataWatched","JSON","parse","localStorage","getItem","$a215baf1061f969f$var$saveDataQueue","$a215baf1061f969f$var$saveDataAll","concat","filter","data","index","array","indexOf","$a215baf1061f969f$var$onWatchedClick","length","$cHsZg","emptyLibrary","saveDataWatched1","console","log","innerHTML","$a215baf1061f969f$var$renderMoviesFromLibrary","error","message","$a215baf1061f969f$var$getGenres","genresArr","map","genre","join","genresName","releaseYear","waitingLi","cardMarkupLibrary","param","poster_path","title","genres","genre_ids","_release_date","release_date","_vote_average","vote_average","id","splice","pop","slice","toFixed","photo","addEventListener","saveDataQueue1","window","onload"],"version":3,"file":"library.8b28c8db.js.map"}